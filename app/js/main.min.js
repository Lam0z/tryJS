const sliderBtns=document.querySelectorAll(".slider__btn"),slider=document.querySelector(".slider__container");let pixels=0;for(let e of sliderBtns)e.addEventListener("click",e=>{sliderBtns[1].disabled=600==pixels,e.target.classList.contains("next")&&(slider.style.transform+="translateX(-150px)",pixels+=150),e.target.classList.contains("prev")&&(slider.style.transform+="translateX(150px)",pixels-=150),console.log(pixels)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsic2xpZGVyQnRucyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsInNsaWRlciIsInF1ZXJ5U2VsZWN0b3IiLCJwaXhlbHMiLCJidG4iLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImRpc2FibGVkIiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJzdHlsZSIsInRyYW5zZm9ybSIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQXVHQSxNQUFNQSxXQUFXQyxTQUFTQyxpQkFBaUIsZ0JBQ3JDQyxPQUFPRixTQUFTRyxjQUFjLHNCQUNwQyxJQUFJQyxPQUFPLEVBQ1gsSUFBSSxJQUFJQyxLQUFPTixXQUNYTSxFQUFJQyxpQkFBaUIsUUFBU0MsSUFFMUJSLFdBQVcsR0FBR1MsU0FESixLQUFSSixPQU1DRyxFQUFFRSxPQUFPQyxVQUFVQyxTQUFTLFVBQzNCVCxPQUFPVSxNQUFNQyxXQUFXLHFCQUN4QlQsUUFBUSxLQUtURyxFQUFFRSxPQUFPQyxVQUFVQyxTQUFTLFVBRTNCVCxPQUFPVSxNQUFNQyxXQUNYLG9CQUNGVCxRQUFRLEtBR1pVLFFBQVFDLElBQUlYIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc3QgbWVzc2FnZUZpZWxkPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrc19fZmllbGQnKVxyXG4vLyBjb25zdCBtZXNzYWdlQ291bnQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhc2tzX19ydWxlLWluZm8gc3BhbicpXHJcbi8vIGNvbnN0IHRhc2tzU2VuZEJ0bj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFza3NfX2J0bicpXHJcbi8vIGNvbnN0IHRhc2tzTGlzdD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFza3NfX2xpc3QnKVxyXG4vLyBjb25zdCB0ZW1wbGF0ZUxpc3RJdGVtPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbGlzdC1pdGVtXCIpLmNvbnRlbnRcclxuLy8gY29uc3QgcHJpb3JpdHlCdG49ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhc2tzX19wcmlvcml0eS1idG4nKVxyXG4vLyBsZXQgdGV4dEluZm89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpXHJcbi8vIHRleHRJbmZvLnRleHRDb250ZW50PSfQodC/0LjRgdC+0Log0LfQsNC00LDRhyDQv9GD0YHRgiEnXHJcbi8vIHRleHRJbmZvLmNsYXNzTGlzdC5hZGQoJ3RleHQtY2VudGVyJyAsJ2ZvbnQtd2VpZ2h0LWJvbGQnLCAndGV4dC1saWdodCcpXHJcblxyXG4vLyBpZih0YXNrc0xpc3QuY2hpbGRyZW4ubGVuZ3RoPT0wKXsgdGFza3NMaXN0LmFwcGVuZENoaWxkKHRleHRJbmZvKX1cclxuLy8gLy8gaWYobWVzc2FnZUZpZWxkLnZhbHVlLmxlbmd0aDw9NSl7XHJcbi8vIC8vICAgICB0YXNrc1NlbmRCdG4uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsJ2Rpc2FibGVkJylcclxuLy8gLy8gfVxyXG4vLyBsZXQgYWRkQ2xvc2VoYW5kbGVyPShjbG9zZUJ0bixlbGVtZW50KT0+e1xyXG4vLyAgICAgY2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57XHJcbi8vICAgICAgICAgZWxlbWVudC5yZW1vdmUoKVxyXG4vLyAgICAgICAgIGlmKHRhc2tzTGlzdC5jaGlsZHJlbi5sZW5ndGg9PTApe1xyXG4vLyAgICAgICAgICAgICB0YXNrc0xpc3QuYXBwZW5kQ2hpbGQodGV4dEluZm8pXHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfSlcclxuLy8gfVxyXG5cclxuLy8gbGV0IGNyZWF0ZUVsZW1lbnQ9KCk9PntcclxuLy8gICAgIGxldCBjbG9uZWRUZW1wbGF0ZT10ZW1wbGF0ZUxpc3RJdGVtLmNsb25lTm9kZSgndHJ1ZScpXHJcbi8vICAgICBsZXQgaXRlbT1jbG9uZWRUZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKCcudGFza3NfX2l0ZW0nKVxyXG4vLyAgICAgbGV0IGxpc3RNZXNzYWdlPWl0ZW0ucXVlcnlTZWxlY3RvcignLnRhc2tzX190ZXh0JylcclxuLy8gICAgIGxldCBjbG9zZU1lc3NhZ2U9aXRlbS5xdWVyeVNlbGVjdG9yKCcuY2xvc2Utc3BhbicpXHJcbi8vICAgICBsaXN0TWVzc2FnZS50ZXh0Q29udGVudD1tZXNzYWdlRmllbGQudmFsdWVcclxuLy8gICAgIGFkZENsb3NlaGFuZGxlcihjbG9zZU1lc3NhZ2UsaXRlbSlcclxuLy8gICAgIHRhc2tzTGlzdC5hcHBlbmRDaGlsZChpdGVtKVxyXG4vLyAgICAgbWVzc2FnZUZpZWxkLnZhbHVlPScnXHJcbi8vICAgICBtZXNzYWdlQ291bnQudGV4dENvbnRlbnQ9JzAnXHJcbi8vICAgICBpZih0YXNrc0xpc3QuY2hpbGRyZW4ubGVuZ3RoIT0wKXtcclxuLy8gICAgICAgICB0ZXh0SW5mby5yZW1vdmUoKVxyXG4vLyAgICAgfVxyXG4vLyAgICAgaWYocHJpb3JpdHlCdG4uY2xhc3NMaXN0LmNvbnRhaW5zKCdidG4td2FybmluZycpKXtcclxuLy8gICAgICAgICBpdGVtLmNsYXNzTGlzdC5hZGQoJ2JnLXdhcm5pbmcnKVxyXG4gICAgICAgIFxyXG4vLyAgICAgfVxyXG4vLyAgICAgdGFza3NTZW5kQnRuLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCdkaXNhYmxlZCcpXHJcbiAgICBcclxuXHJcbi8vIH1cclxuLy8gcHJpb3JpdHlCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57XHJcbiAgICBcclxuLy8gICAgIHByaW9yaXR5QnRuLmNsYXNzTGlzdC50b2dnbGUoJ2J0bi13YXJuaW5nJylcclxuLy8gICAgIGNvbnNvbGUubG9nKCk7XHJcbi8vICAgICBpZihwcmlvcml0eUJ0bi5jbGFzc0xpc3QuY29udGFpbnMoJ2J0bi13YXJuaW5nJykpe1xyXG4vLyAgICAgICAgIHByaW9yaXR5QnRuLnRleHRDb250ZW50PVwi0JLQsNC20L3QsNGPINC30LDQtNCw0YfQsFwiXHJcbi8vICAgICB9ZWxzZXtcclxuLy8gICAgICAgICBwcmlvcml0eUJ0bi50ZXh0Q29udGVudD0n0J7QsdGL0YfQvdCw0Y8g0LfQsNC00LDRh9CwJ1xyXG4vLyAgICAgfVxyXG4gICAgXHJcbi8vIH0pXHJcbi8vIG1lc3NhZ2VGaWVsZC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsKCk9PntcclxuLy8gICAgIG1lc3NhZ2VDb3VudC50ZXh0Q29udGVudD1tZXNzYWdlRmllbGQudmFsdWUubGVuZ3RoXHJcbi8vICAgICBpZihtZXNzYWdlRmllbGQudmFsdWUubGVuZ3RoPjUwfHxtZXNzYWdlRmllbGQudmFsdWUubGVuZ3RoPD0zKXtcclxuLy8gICAgICAgICB0YXNrc1NlbmRCdG4uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsJ2Rpc2FibGVkJylcclxuLy8gICAgIH1cclxuLy8gICAgIGlmKG1lc3NhZ2VGaWVsZC52YWx1ZS5sZW5ndGg+NTApe1xyXG4vLyAgICAgICAgIG1lc3NhZ2VGaWVsZC5zdHlsZS5ib3JkZXJDb2xvcj0ncmVkJ1xyXG4vLyAgICAgICAgIG1lc3NhZ2VGaWVsZC5zdHlsZS5jb2xvcj0ncmVkJ1xyXG4vLyAgICAgICAgIG1lc3NhZ2VDb3VudC5zdHlsZS5jb2xvcj0ncmVkJ1xyXG4gICAgICAgIFxyXG4vLyAgICAgfWVsc2V7XHJcbi8vICAgICAgICAgbWVzc2FnZUZpZWxkLnN0eWxlLmJvcmRlckNvbG9yPScnXHJcbi8vICAgICAgICAgbWVzc2FnZUZpZWxkLnN0eWxlLmNvbG9yPScnXHJcbi8vICAgICAgICAgbWVzc2FnZUNvdW50LnN0eWxlLmNvbG9yPScnXHJcbi8vICAgICAgICAgaWYobWVzc2FnZUZpZWxkLnZhbHVlLmxlbmd0aD4zKXtcclxuLy8gICAgICAgICAgICAgdGFza3NTZW5kQnRuLnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKVxyXG4vLyAgICAgICAgIH1cclxuICAgICAgICBcclxuLy8gICAgIH1cclxuLy8gfSlcclxuLy8gbWVzc2FnZUZpZWxkLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLChlKT0+e1xyXG4gICAgXHJcbi8vICAgICBpZihlLmtleT09PSdFbnRlcicpe1xyXG4vLyAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxyXG4vLyAgICAgICAgIGNvbnNvbGUubG9nKCdwcmVzcycpO1xyXG4vLyAgICAgICAgIGNyZWF0ZUVsZW1lbnQoKVxyXG4vLyAgICAgfVxyXG4vLyB9KVxyXG4vLyB0YXNrc1NlbmRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLGNyZWF0ZUVsZW1lbnQpXHJcblxyXG4vLyAvLyBHQUxMRVJZIGNvZGVcclxuXHJcbi8vIGNvbnN0IGJpZ0ltZ2FlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nYWxsZXJ5X19iaWctaW1hZ2UgaW1nJylcclxuLy8gY29uc3QgcHJldmlld3NJbWFnZXM9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmdhbGxlcnlfX2l0ZW0gaW1nJylcclxuLy8gLy8gY29uc29sZS5sb2coYmlnSW1nYWUscHJld2lld3NJbWFnZXMpO1xyXG4vLyBsZXQgYWRk0KFsaWNrSGFuZGxlcj0oaXRlbSk9PntcclxuLy8gICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57XHJcbi8vICAgICAgICAgYmlnSW1nYWUuc3JjPWl0ZW0uc3JjIFxyXG4vLyAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJldmlld3NJbWFnZXMubGVuZ3RoOyBpKyspIHtcclxuLy8gICAgICAgICAgICAgcHJldmlld3NJbWFnZXNbaV0uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJylcclxuLy8gICAgICAgICB9XHJcbi8vICAgICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxyXG4vLyAgICAgfSlcclxuLy8gfVxyXG4vLyBmb3IgKGxldCBpID0gMDsgaSA8IHByZXZpZXdzSW1hZ2VzLmxlbmd0aDsgaSsrKSB7XHJcbi8vICAgICBhZGTQoWxpY2tIYW5kbGVyKHByZXZpZXdzSW1hZ2VzW2ldKSAgXHJcbi8vIH1cclxuXHJcbmNvbnN0IHNsaWRlckJ0bnM9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNsaWRlcl9fYnRuJylcclxuY29uc3Qgc2xpZGVyPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zbGlkZXJfX2NvbnRhaW5lcicpXHJcbmxldCBwaXhlbHM9MFxyXG5mb3IobGV0IGJ0biBvZiBzbGlkZXJCdG5zKXtcclxuICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKGUpPT57XHJcbiAgICAgICBpZihwaXhlbHM9PTYwMCl7XHJcbiAgICAgICAgc2xpZGVyQnRuc1sxXS5kaXNhYmxlZD10cnVlXHJcbiAgICAgICB9ZWxzZXtcclxuICAgICAgICBzbGlkZXJCdG5zWzFdLmRpc2FibGVkPWZhbHNlXHJcbiAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbmV4dCcpKXtcclxuICAgICAgICAgICAgc2xpZGVyLnN0eWxlLnRyYW5zZm9ybSs9J3RyYW5zbGF0ZVgoLTE1MHB4KSdcclxuICAgICAgICAgICAgcGl4ZWxzKz0xNTBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncHJldicpKXtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHNsaWRlci5zdHlsZS50cmFuc2Zvcm1cclxuICAgICAgICAgICAgKz0ndHJhbnNsYXRlWCgxNTBweCknXHJcbiAgICAgICAgICAgIHBpeGVscy09MTUwXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmxvZyhwaXhlbHMpO1xyXG4gICAgfSlcclxufSJdfQ==
